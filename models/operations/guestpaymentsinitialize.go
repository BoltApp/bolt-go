// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/BoltApp/bolt-go/models/components"
	"net/http"
)

type GuestPaymentsInitializeSecurity struct {
	APIKey string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

func (o *GuestPaymentsInitializeSecurity) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

type GuestPaymentsInitializeRequest struct {
	// The publicly viewable identifier used to identify a merchant division.
	XPublishableKey               string                                   `header:"style=simple,explode=false,name=X-Publishable-Key"`
	GuestPaymentInitializeRequest components.GuestPaymentInitializeRequest `request:"mediaType=application/json"`
}

func (o *GuestPaymentsInitializeRequest) GetXPublishableKey() string {
	if o == nil {
		return ""
	}
	return o.XPublishableKey
}

func (o *GuestPaymentsInitializeRequest) GetGuestPaymentInitializeRequest() components.GuestPaymentInitializeRequest {
	if o == nil {
		return components.GuestPaymentInitializeRequest{}
	}
	return o.GuestPaymentInitializeRequest
}

type GuestPaymentsInitializeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The payment was successfully initialized, and was either immediately finalized or is pending
	PaymentResponse *components.PaymentResponse
}

func (o *GuestPaymentsInitializeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GuestPaymentsInitializeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GuestPaymentsInitializeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GuestPaymentsInitializeResponse) GetPaymentResponse() *components.PaymentResponse {
	if o == nil {
		return nil
	}
	return o.PaymentResponse
}

func (o *GuestPaymentsInitializeResponse) GetPaymentResponseFinalized() *components.PaymentResponseFinalized {
	if v := o.GetPaymentResponse(); v != nil {
		return v.PaymentResponseFinalized
	}
	return nil
}

func (o *GuestPaymentsInitializeResponse) GetPaymentResponsePending() *components.PaymentResponsePending {
	if v := o.GetPaymentResponse(); v != nil {
		return v.PaymentResponsePending
	}
	return nil
}
