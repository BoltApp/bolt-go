// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/BoltApp/bolt-go/models/components"
	"net/http"
)

type PaymentsUpdateRequest struct {
	// The ID of the payment to update
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The publicly viewable identifier used to identify a merchant division.
	XPublishableKey string `header:"style=simple,explode=false,name=X-Publishable-Key"`
	// A unique identifier for a shopper's device, generated by Bolt. This header is required for proper attribution of this operation to your analytics reports. Omitting this header may result in incorrect statistics.
	XMerchantClientID    string                          `header:"style=simple,explode=false,name=X-Merchant-Client-Id"`
	PaymentUpdateRequest components.PaymentUpdateRequest `request:"mediaType=application/json"`
}

func (o *PaymentsUpdateRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PaymentsUpdateRequest) GetXPublishableKey() string {
	if o == nil {
		return ""
	}
	return o.XPublishableKey
}

func (o *PaymentsUpdateRequest) GetXMerchantClientID() string {
	if o == nil {
		return ""
	}
	return o.XMerchantClientID
}

func (o *PaymentsUpdateRequest) GetPaymentUpdateRequest() components.PaymentUpdateRequest {
	if o == nil {
		return components.PaymentUpdateRequest{}
	}
	return o.PaymentUpdateRequest
}

type PaymentsUpdateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The pending payment was successfully updated
	PaymentResponse *components.PaymentResponse
}

func (o *PaymentsUpdateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PaymentsUpdateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PaymentsUpdateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PaymentsUpdateResponse) GetPaymentResponse() *components.PaymentResponse {
	if o == nil {
		return nil
	}
	return o.PaymentResponse
}

func (o *PaymentsUpdateResponse) GetPaymentResponseFinalized() *components.PaymentResponseFinalized {
	if v := o.GetPaymentResponse(); v != nil {
		return v.PaymentResponseFinalized
	}
	return nil
}

func (o *PaymentsUpdateResponse) GetPaymentResponsePending() *components.PaymentResponsePending {
	if v := o.GetPaymentResponse(); v != nil {
		return v.PaymentResponsePending
	}
	return nil
}
