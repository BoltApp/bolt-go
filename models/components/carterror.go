// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CartErrorTag - The type of error returned
type CartErrorTag string

const (
	CartErrorTagPaymentAlreadyExists CartErrorTag = "payment_already_exists"
	CartErrorTagCurrencyNotSupported CartErrorTag = "currency_not_supported"
)

func (e CartErrorTag) ToPointer() *CartErrorTag {
	return &e
}
func (e *CartErrorTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "payment_already_exists":
		fallthrough
	case "currency_not_supported":
		*e = CartErrorTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CartErrorTag: %v", v)
	}
}

type CartError struct {
	// The type of error returned
	DotTag CartErrorTag `json:".tag"`
	// A human-readable error message, which might include information specific to
	// the request that was made.
	//
	Message string `json:"message"`
}

func (o *CartError) GetDotTag() CartErrorTag {
	if o == nil {
		return CartErrorTag("")
	}
	return o.DotTag
}

func (o *CartError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}
