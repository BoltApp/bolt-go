// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AddressReferenceIDTag - The type of address reference
type AddressReferenceIDTag string

const (
	AddressReferenceIDTagID AddressReferenceIDTag = "id"
)

func (e AddressReferenceIDTag) ToPointer() *AddressReferenceIDTag {
	return &e
}

func (e *AddressReferenceIDTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		*e = AddressReferenceIDTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddressReferenceIDTag: %v", v)
	}
}

type AddressReferenceID struct {
	// The type of address reference
	DotTag AddressReferenceIDTag `json:".tag"`
	// The address's ID
	ID string `json:"id"`
}

func (o *AddressReferenceID) GetDotTag() AddressReferenceIDTag {
	if o == nil {
		return AddressReferenceIDTag("")
	}
	return o.DotTag
}

func (o *AddressReferenceID) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}
