// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PaymentMethodAfterpayTag string

const (
	PaymentMethodAfterpayTagAfterpay PaymentMethodAfterpayTag = "afterpay"
)

func (e PaymentMethodAfterpayTag) ToPointer() *PaymentMethodAfterpayTag {
	return &e
}
func (e *PaymentMethodAfterpayTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "afterpay":
		*e = PaymentMethodAfterpayTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentMethodAfterpayTag: %v", v)
	}
}

type PaymentMethodAfterpayOutput struct {
	DotTag PaymentMethodAfterpayTag `json:".tag"`
}

func (o *PaymentMethodAfterpayOutput) GetDotTag() PaymentMethodAfterpayTag {
	if o == nil {
		return PaymentMethodAfterpayTag("")
	}
	return o.DotTag
}

type PaymentMethodAfterpay struct {
	DotTag PaymentMethodAfterpayTag `json:".tag"`
	// Return URL to return to after payment completion in Afterpay.
	ReturnURL string `json:"return_url"`
}

func (o *PaymentMethodAfterpay) GetDotTag() PaymentMethodAfterpayTag {
	if o == nil {
		return PaymentMethodAfterpayTag("")
	}
	return o.DotTag
}

func (o *PaymentMethodAfterpay) GetReturnURL() string {
	if o == nil {
		return ""
	}
	return o.ReturnURL
}
