// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type GetAccessTokenResponse struct {
	// A JSON Web Token (JWT) issued when the request includes the scope open_id.
	IDToken *string `json:"id_token,omitempty"`
	// An access token you can use to make requests on behalf of a Bolt shopper.
	AccessToken *string `json:"access_token,omitempty"`
	// The access token's expiration, in seconds.
	ExpiresIn *int64 `json:"expires_in,omitempty"`
	// A refresh token you can use to issue a brand new access token without obtaining a new authorization code.
	RefreshToken *string `json:"refresh_token,omitempty"`
	// The scope granted to the refresh token. Currently, refreshed token will only grant view permissions.
	RefreshTokenScope *string `json:"refresh_token_scope,omitempty"`
	// The scope granted to access token, depending on the scope granted to the authorization code as well as the scope parameter. Options include `bolt.account.manage`, `bolt.account.view`, `openid`. Multiple values can be returned as space-separated strings.
	Scope *string `json:"scope,omitempty"`
	// The token_type will always be bearer.
	TokenType *string `json:"token_type,omitempty"`
}

func (o *GetAccessTokenResponse) GetIDToken() *string {
	if o == nil {
		return nil
	}
	return o.IDToken
}

func (o *GetAccessTokenResponse) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *GetAccessTokenResponse) GetExpiresIn() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}

func (o *GetAccessTokenResponse) GetRefreshToken() *string {
	if o == nil {
		return nil
	}
	return o.RefreshToken
}

func (o *GetAccessTokenResponse) GetRefreshTokenScope() *string {
	if o == nil {
		return nil
	}
	return o.RefreshTokenScope
}

func (o *GetAccessTokenResponse) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *GetAccessTokenResponse) GetTokenType() *string {
	if o == nil {
		return nil
	}
	return o.TokenType
}
