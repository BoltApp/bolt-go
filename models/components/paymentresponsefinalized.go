// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PaymentResponseFinalizedTag string

const (
	PaymentResponseFinalizedTagFinalized PaymentResponseFinalizedTag = "finalized"
)

func (e PaymentResponseFinalizedTag) ToPointer() *PaymentResponseFinalizedTag {
	return &e
}

func (e *PaymentResponseFinalizedTag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "finalized":
		*e = PaymentResponseFinalizedTag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentResponseFinalizedTag: %v", v)
	}
}

type Status string

const (
	StatusSuccess Status = "success"
)

func (e Status) ToPointer() *Status {
	return &e
}

func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type PaymentResponseFinalized struct {
	DotTag      PaymentResponseFinalizedTag `json:".tag"`
	ID          *string                     `json:"id,omitempty"`
	Status      Status                      `json:"status"`
	Transaction Transaction                 `json:"transaction"`
}

func (o *PaymentResponseFinalized) GetDotTag() PaymentResponseFinalizedTag {
	if o == nil {
		return PaymentResponseFinalizedTag("")
	}
	return o.DotTag
}

func (o *PaymentResponseFinalized) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PaymentResponseFinalized) GetStatus() Status {
	if o == nil {
		return Status("")
	}
	return o.Status
}

func (o *PaymentResponseFinalized) GetTransaction() Transaction {
	if o == nil {
		return Transaction{}
	}
	return o.Transaction
}
